using Cargowire.Euler.Common;

namespace Cargowire.Euler.Problems
{
    public class Problem2 : IntEulerItem
    {
        private const int CONFIRMED_ANSWER = 4613732;
        public override int ConfirmedAnswer
        {
            get { return CONFIRMED_ANSWER; }
        }
        public override string Problem {
            get
            {
                return @"Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

Find the sum of all the even-valued terms in the sequence which do not exceed four million.";
            }
        }

        public Problem2() :
            this(new Solution2())
        {
        }

        public Problem2(IProblemSolver<Problem2, int> solver)
            : base((IProblemSolver<IEulerItem<string, int>, int>)solver)
        {
        }
    }
}
