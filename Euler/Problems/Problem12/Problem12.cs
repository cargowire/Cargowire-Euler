using Cargowire.Euler.Common;

namespace Cargowire.Euler.Problems
{
    public class Problem12 : LongEulerItem
    {
        private const long CONFIRMED_ANSWER = 76576500;
        public override long ConfirmedAnswer
        {
            get { return CONFIRMED_ANSWER; }
        }
        public override string Problem {
            get
            {
                return @"The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?";
            }
        }

        public Problem12() :
            this(new Solution12BruteForce())
        {
        }

        public Problem12(IProblemSolver<Problem12, long> solver)
            : base((IProblemSolver<IEulerItem<string, long>, long>)solver)
        {
        }
    }
}